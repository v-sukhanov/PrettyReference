version: "3.9"
services:
  seq:
    image: datalust/seq:latest
    deploy:
      resources:
        limits:
          memory: 14G
        reservations:
          memory: 14G
    ports:
      - 5341:80
    volumes:
      - /var/lib/seq:/var/lib/seq
    environment:
      - ACCEPT_EULA=Y
  rabbitmq:
    image: rabbitmq:3.6.14-management
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      timeout: 5s
      interval: 5s
      retries: 5
      test: ["CMD", "rabbitmqctl", "status"]
  database_mysql:
    platform: linux/x86_64
    image: mysql:8.0.22
    ports:
      - "8778:3306"
    volumes:
      - /var/lib/mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: newuser
      MYSQL_PASSWORD: newuser
      MYSQL_DATABASE: pretty-reference
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
  crawler:
    build:
      context: ./PrettyReference.Backend/src/services/PrettyReference.Crawler/
      dockerfile: PrettyReference.Crawler/Dockerfile
    tty: true
    environment:
      RABBITMQ_HOST: rabbitmq
  reference-manager:
    build:
      context: ./PrettyReference.Backend/src/services/
      dockerfile: PrettyReference.ReferenceManager/PrettyReference.ReferenceManager/Dockerfile
    tty: true
    depends_on:
      database_mysql:
        condition: service_healthy
#      rabbitmq:
#        condition: service_healthy
    environment:
      TZ: Europe/Moscow
      RABBITMQ_HOST: rabbitmq
      MYSQL: server=database_mysql,8778;database=pretty-reference;uid=root;pwd=root
  api:
    build:
      context: ./PrettyReference.Backend/src/
      dockerfile: API/PrettyReference.Api.Base/Dockerfile
    tty: true
    environment:
      RABBITMQ_HOST: rabbitmq
      CORS_ORIGINS: "*"
    ports:
      - 5000:80
